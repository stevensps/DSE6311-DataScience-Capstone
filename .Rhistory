race = na_if(race, 77),
race = na_if(race, 99)
)
# Chunk 14
table(brfss_subset$race, useNA = "ifany")
# Chunk 15
brfss_subset <- brfss_subset %>%
mutate(
race = na_if(race, 7),
race = na_if(race, 8),
race = na_if(race, 9)
)
# Chunk 16
table(brfss_subset$race, useNA = "ifany")
# Chunk 17
brfss_subset <- brfss_subset %>%
mutate(
hlthpl1   = factor(hlthpl1, levels = c(1, 2), labels = c("Yes", "No")),
persdoc3  = factor(persdoc3, levels = c(1, 2), labels = c("Yes", "No")),
medcost1  = factor(medcost1, levels = c(1, 2), labels = c("Yes", "No")),
primins1  = factor(primins1, levels = c(1, 2), labels = c("Yes", "No")),
exerany2  = factor(exerany2, levels = c(1, 2), labels = c("Yes", "No"))
)
# Chunk 18
table(brfss_subset$hlthpl1, useNA = "ifany") #Noting class imbalance here, this is good!
# Chunk 19
table(brfss_subset$exerany2, useNA = "ifany")
# Chunk 20
brfss_subset <- brfss_subset %>%
mutate(
race = factor(race,
levels = c(1, 2, 3, 4, 5, 6),
labels = c("White only", "Black only", "American Indian/Alaska Native", "Asian only", "Other single race", "Multiracial")
),
educa = factor(educa,
levels = c(1, 2, 3, 4, 5, 6),
labels = c("Never attended school", "Grades 1-8", "Grades 9-11", "High school grad", "Some college", "College grad")
),
incomg1 = factor(incomg1,
levels = c(1, 2, 3, 4, 5, 6, 7, 8),
labels = c("Less than $10k", "$10k–$15k", "$15k–$20k", "$20k–$25k", "$25k–$35k", "$35k–$50k", "$50k–$75k", "Over $75k")
),
marital = factor(marital,
levels = c(1, 2, 3, 4, 5, 6),
labels = c("Married", "Divorced", "Widowed", "Separated", "Never married", "Unmarried couple")
)
)
# Chunk 21
brfss_subset <- brfss_subset %>%
mutate(
sex = factor(sex,
levels = c(1, 2),
labels = c("Male", "Female")
),
employ1 = factor(employ1,
levels = c(1, 2, 3, 4, 5, 6, 7, 8),
labels = c("Employed for wages", "Self-employed", "Out of work >1yr", "Out of work <1yr", "Homemaker", "Student", "Retired", "Unable to work")
),
pa150r4 = factor(pa150r4,
levels = c(1, 2),
labels = c("Meets guidelines", "Does not meet")
)
)
# Chunk 22
table(brfss_subset$race, useNA = "ifany")
table(brfss_subset$educa, useNA = "ifany")
table(brfss_subset$sex, useNA = "ifany")
table(brfss_subset$employ1, useNA = "ifany")
# Chunk 23
brfss_subset %>% #Are we excluding any variables in the select statement. Otherwise, it may be redunant?
select(ment14d, hlthpl1, persdoc3, medcost1, checkup1, primins1,
addepev3, acedeprs, decide, exerany2, pa150r4, sex, age80,
race, educa, employ1, marital, incomg1, numadult) %>%
tbl_summary(
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
missing = "no"
) %>%
bold_labels()
# Chunk 24
brfss_subset %>%
select(ment14d, persdoc3, medcost1, checkup1, primins1, addepev3,
acedeprs, decide, exerany2, pa150r4, sex, age80, race, educa,
employ1, marital, incomg1, numadult, hlthpl1) %>%
tbl_summary(
by = hlthpl1,
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
missing = "no"
) %>%
add_p() %>%
bold_labels()
# Chunk 25
brfss_subset %>%
select(ment14d, persdoc3, medcost1, checkup1, primins1, addepev3,
acedeprs, decide, exerany2, pa150r4, sex, age80, race, educa,
employ1, marital, incomg1, numadult, hlthpl1) %>%
tbl_summary(
by = ment14d,
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
missing = "no"
) %>%
add_p() %>%
bold_labels()
# Chunk 26
ggplot(brfss_subset, aes(x = race)) +
geom_bar() +
labs(title = "Race Distribution", x = "Race", y = "Count") +
theme_minimal()
# Chunk 27
ggplot(brfss_subset, aes(x = ment14d)) +
geom_histogram(binwidth = 1, fill = "steelblue", color = "white") +
labs(title = "Distribution of Poor Mental Health Days", x = "Days", y = "Count") +
theme_minimal()
# Chunk 28
ggplot(brfss_subset, aes(x = hlthpl1, y = ment14d)) +
geom_boxplot() +
labs(title = "Poor Mental Health Days by Insurance Status", x = "Insurance", y = "Mental Health Days") +
theme_minimal()
# Chunk 29
ggplot(brfss_subset, aes(x = exerany2)) +
geom_bar() +
labs(title = "Exercise Participation", x = "Exercised in Past 30 Days", y = "Count") +
theme_minimal()
# Chunk 30
ggplot(brfss_subset, aes(x = incomg1)) +
geom_bar() +
labs(title = "Income Group Distribution", x = "Income Group", y = "Count") +
theme_minimal()
# Chunk 31
gg_miss_var(brfss_subset) +
labs(title = "Missingness by Variable")
# Chunk 32
brfss_numeric <- brfss_subset %>%
select(ment14d, age80, numadult) %>%
na.omit()
cor_matrix <- cor(brfss_numeric)
corrplot(cor_matrix, method = "color", type = "upper", tl.cex = 0.8)
# Chunk 33
pca_result <- prcomp(brfss_numeric, scale. = TRUE)
biplot(pca_result, main = "PCA Biplot (Centered & Scaled Variables)")
brfss_numeric <- brfss_subset %>%
select(ment14d, age80, numadult) %>%
na.omit()
cor_matrix <- cor(brfss_numeric)
corrplot(cor_matrix, method = "color", type = "upper", tl.cex = 0.8)
brfss_numeric <- brfss_subset %>%
select(ment14d, age80, numadult) %>%
na.omit()
cor_matrix <- cor(brfss_numeric)
corrplot(cor_matrix, method = "color", type = "upper", tl.cex = 0.8)
corrplot(cor_matrix, method = "color", type = "upper", tl.cex = 0.8)
pca_result <- prcomp(brfss_numeric, scale. = TRUE)
biplot(pca_result, main = "PCA Biplot (Centered & Scaled Variables)")
brfss_numeric %>%
plot(ment14d ~.)
lmModel <- lm(ment14d ~ hlthpl1, data = brfss_subset)
summary(lmModel)
lmModelAddition <- lm(ment14d ~ hlthpl1 + sex + incomg1, data = brfss_subset)
summary(lmModelAddition)
vif(lm_model)
library(car)
vif(lmModelAddition)
tableChiSq <- brfss_subset %>%
table(medcost1, checkup1)
tableChiSq <- table(brfss_subset$medcost1, brfss_subset$checkup1)
chiResult <- chisq.test(tableChiSq)
print(chiResult)
# Chunk 1
library(haven)
library(dplyr)
library(tidyr)
library(ggplot2)
library(gtsummary)
library(forcats)
library(naniar)
library(corrplot)
library(stats)
library(stringr)
library(car)
library(reshape2)
library(viridis)
library(GGally)
library(knitr)
library(kableExtra)
# Chunk 2
# Code below imports the data to any person's machine
if (!dir.exists("C:/temp")) {
dir.create("C:/temp")
} # If statement creates temp folder on machine
zipUrl <- "https://www.cdc.gov/brfss/annual_data/2023/files/LLCP2023XPT.zip"
zipPath <- path.expand("C:/temp/LLCP2023XPT.zip")
if (!file.exists(zipPath)) {
download.file(zipUrl, destfile = zipPath)
} #Download the file
extractPath <- "C:/temp"
sasFile <- file.path(extractPath, "LLCP2023.XPT")
if (!file.exists(sasFile)) {
unzip(zipPath, exdir = extractPath)
}
list.files(extractPath) # Extract, unzip, and make sure file exists
if (file.exists(sasFile)) {
brfss_raw <- read_xpt(sasFile)
head(brfss_raw)
} else {
message("File does not exist, check download or unzip process.")
} # Read file into R after specifying file variable
# Chunk 3
names(brfss_raw)
# Chunk 4
brfss_subset <- brfss_raw %>%
select(
ment14d   = `_MENT14D`,
hlthpl1   = `_HLTHPL1`,
persdoc3  = PERSDOC3,
medcost1  = MEDCOST1,
checkup1  = CHECKUP1,
primins1  = PRIMINS1,
addepev3  = ADDEPEV3,
acedeprs  = ACEDEPRS,
decide    = DECIDE,
exerany2  = EXERANY2,
pa150r4   = `_PA150R4`,
sex       = `_SEX`,
age80     = `_AGE80`,
race      = `_RACE`,
educa     = EDUCA,
employ1   = EMPLOY1,
marital   = MARITAL,
incomg1   = `_INCOMG1`,
numadult  = NUMADULT,
state     = `_STATE`
)
# Chunk 5
glimpse(brfss_subset)
# Chunk 6
brfss_subset <- brfss_subset %>%
mutate(
hlthpl1   = na_if(hlthpl1, 7),
hlthpl1   = na_if(hlthpl1, 9),
persdoc3  = na_if(persdoc3, 7),
persdoc3  = na_if(persdoc3, 9),
medcost1  = na_if(medcost1, 7),
medcost1  = na_if(medcost1, 9),
checkup1  = na_if(checkup1, 7),
checkup1  = na_if(checkup1, 9),
primins1  = na_if(primins1, 7),
primins1  = na_if(primins1, 9),
exerany2  = na_if(exerany2, 7),
exerany2  = na_if(exerany2, 9),
pa150r4   = na_if(pa150r4, 7),
pa150r4   = na_if(pa150r4, 9)
)
# Chunk 7
brfss_subset <- brfss_subset %>%
mutate(
race      = na_if(race, 77),
race      = na_if(race, 99),
educa     = na_if(educa, 9),
employ1   = na_if(employ1, 9),
marital   = na_if(marital, 9),
incomg1   = na_if(incomg1, 77),
incomg1   = na_if(incomg1, 99),
sex       = na_if(sex, 7),
sex       = na_if(sex, 9)
)
# Chunk 8
brfss_subset <- brfss_subset %>%
mutate(
menthlth = brfss_raw$MENTHLTH,
ment14d = ifelse(menthlth == 88, 0, menthlth),
ment14d = na_if(ment14d, 9),
ment14d = na_if(ment14d, 77),
ment14d = na_if(ment14d, 99),
ment14d_cat = case_when(
ment14d == 0 ~ "None",
ment14d >= 1 & ment14d <= 13 ~ "Occasional",
ment14d >= 14 ~ "Frequent",
TRUE ~ NA_character_
),
ment14d_cat = factor(ment14d_cat, levels = c("None", "Occasional", "Frequent"))
)
# Chunk 9
brfss_subset <- brfss_subset %>%
mutate(
ment14d = na_if(ment14d, 9)
)
# Chunk 10
table(brfss_subset$ment14d, useNA = "ifany")
# Chunk 11
brfss_subset <- brfss_subset %>%
mutate(
ment14d_cat = case_when(
ment14d == 0 ~ "None",
ment14d >= 1 & ment14d <= 13 ~ "Occasional",
ment14d >= 14 ~ "Frequent",
TRUE ~ NA_character_
),
ment14d_cat = factor(ment14d_cat, levels = c("None", "Occasional", "Frequent"))
)
# Chunk 12
table(brfss_subset$ment14d_cat, useNA = "ifany")
# Chunk 13
table(brfss_subset$hlthpl1, useNA = "ifany")
table(brfss_subset$race, useNA = "ifany")
table(brfss_subset$incomg1, useNA = "ifany")
# Chunk 14
brfss_subset <- brfss_subset %>%
mutate(
ment14d = na_if(ment14d, 9)
)
# Chunk 15
brfss_subset <- brfss_subset %>%
mutate(
race = as.numeric(race),
race = na_if(race, 77),
race = na_if(race, 99)
)
# Chunk 16
table(brfss_subset$race, useNA = "ifany")
# Chunk 17
brfss_subset <- brfss_subset %>%
mutate(
race = na_if(race, 7),
race = na_if(race, 8),
race = na_if(race, 9)
)
# Chunk 18
table(brfss_subset$race, useNA = "ifany")
# Chunk 19
brfss_subset <- brfss_subset %>%
mutate(
hlthpl1   = factor(hlthpl1, levels = c(1, 2), labels = c("Yes", "No")),
persdoc3  = factor(persdoc3, levels = c(1, 2), labels = c("Yes", "No")),
medcost1  = factor(medcost1, levels = c(1, 2), labels = c("Yes", "No")),
primins1  = factor(primins1, levels = c(1, 2), labels = c("Yes", "No")),
exerany2  = factor(exerany2, levels = c(1, 2), labels = c("Yes", "No"))
)
# Chunk 20
table(brfss_subset$hlthpl1, useNA = "ifany") #Noting class imbalance
# Chunk 21
table(brfss_subset$exerany2, useNA = "ifany")
# Chunk 22
brfss_subset <- brfss_subset %>%
mutate(
race = factor(race,
levels = c(1, 2, 3, 4, 5, 6),
labels = c("White only", "Black only", "American Indian/Alaska Native", "Asian only", "Other single race", "Multiracial")
),
educa = factor(educa,
levels = c(1, 2, 3, 4, 5, 6),
labels = c("Never attended school", "Grades 1-8", "Grades 9-11", "High school grad", "Some college", "College grad")
),
incomg1 = factor(incomg1,
levels = c(1, 2, 3, 4, 5, 6, 7, 8),
labels = c("Less than $10k", "$10k–$15k", "$15k–$20k", "$20k–$25k", "$25k–$35k", "$35k–$50k", "$50k–$75k", "Over $75k")
),
marital = factor(marital,
levels = c(1, 2, 3, 4, 5, 6),
labels = c("Married", "Divorced", "Widowed", "Separated", "Never married", "Unmarried couple")
)
)
# Chunk 23
brfss_subset <- brfss_subset %>%
mutate(
sex = factor(sex,
levels = c(1, 2),
labels = c("Male", "Female")
),
employ1 = factor(employ1,
levels = c(1, 2, 3, 4, 5, 6, 7, 8),
labels = c("Employed for wages", "Self-employed", "Out of work >1yr", "Out of work <1yr", "Homemaker", "Student", "Retired", "Unable to work")
),
pa150r4 = factor(pa150r4,
levels = c(1, 2),
labels = c("Meets guidelines", "Does not meet")
)
)
# Chunk 24
table(brfss_subset$race, useNA = "ifany")
table(brfss_subset$educa, useNA = "ifany")
table(brfss_subset$sex, useNA = "ifany")
table(brfss_subset$employ1, useNA = "ifany")
# Chunk 25
brfss_subset %>%
select(ment14d, hlthpl1, persdoc3, medcost1, checkup1, primins1,
addepev3, acedeprs, decide, exerany2, pa150r4, sex, age80,
race, educa, employ1, marital, incomg1, numadult) %>%
tbl_summary(
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
missing = "no"
) %>%
bold_labels()
# Chunk 26
brfss_subset %>%
select(ment14d, persdoc3, medcost1, checkup1, primins1, addepev3,
acedeprs, decide, exerany2, pa150r4, sex, age80, race, educa,
employ1, marital, incomg1, numadult, hlthpl1) %>%
tbl_summary(
by = hlthpl1,
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
missing = "no"
) %>%
add_p() %>%
bold_labels()
# Chunk 27
brfss_subset %>%
select(ment14d, persdoc3, medcost1, checkup1, primins1, addepev3,
acedeprs, decide, exerany2, pa150r4, sex, age80, race, educa,
employ1, marital, incomg1, numadult, hlthpl1) %>%
tbl_summary(
by = ment14d,
statistic = list(all_continuous() ~ "{mean} ({sd})",
all_categorical() ~ "{n} ({p}%)"),
missing = "no"
) %>%
add_p() %>%
bold_labels()
# Chunk 28
ggplot(brfss_subset, aes(x = race)) +
geom_bar() +
labs(title = "Race Distribution", x = "Race", y = "Count") +
theme_minimal()
# Chunk 29
ggplot(brfss_subset, aes(x = ment14d)) +
geom_histogram(binwidth = 1, fill = "steelblue", color = "white") +
labs(title = "Distribution of Poor Mental Health Days", x = "Days", y = "Count") +
theme_minimal()
# Chunk 30
ggplot(brfss_subset, aes(x = hlthpl1, y = ment14d)) +
geom_boxplot() +
labs(title = "Poor Mental Health Days by Insurance Status", x = "Insurance", y = "Mental Health Days") +
theme_minimal()
# Chunk 31
ggplot(brfss_subset, aes(x = exerany2)) +
geom_bar() +
labs(title = "Exercise Participation", x = "Exercised in Past 30 Days", y = "Count") +
theme_minimal()
# Chunk 32
ggplot(brfss_subset, aes(x = incomg1)) +
geom_bar() +
labs(title = "Income Group Distribution", x = "Income Group", y = "Count") +
theme_minimal()
# Chunk 33
gg_miss_var(brfss_subset) +
labs(title = "Missingness by Variable")
# Chunk 34
brfss_numeric <- brfss_subset %>%
select(age80, numadult, state, menthlth, checkup1) %>%
na.omit()
cor_matrix <- cor(brfss_numeric)
corrplot(cor_matrix, method = "color", type = "upper", tl.cex = 0.8)
# Chunk 35
categoricalVars <- names(brfss_subset)[sapply(brfss_subset, is.factor)]
chiResults <- list()
for (i in 1:(length(categoricalVars) - 1)) {
for (j in (i+1):length(categoricalVars)) {
var1 <- categoricalVars[i]
var2 <- categoricalVars[j] # SS - iterate through predictors to compare 2
chiTest <- chisq.test(table(brfss_subset[[var1]], brfss_subset[[var2]]),
simulate.p.value = TRUE)
chiResults[[paste(var1, var2, sep = "_vs_")]] <- # SS - run chi sq and list result
list(
variable1 = var1,
variable2 = var2,
p_value = chiTest$p.value,
statistic = chiTest$statistic
)
}
}
significantchiResult <- Filter(function(x) x$p_value < 0.05, chiResults)
# Chunk 36
chiResultsDF <- do.call(rbind, lapply(chiResults, function(x) {
data.frame(
variable1 = x$variable1,
variable2 = x$variable2,
statistic = x$statistic,
p_value = x$p_value
)
}
)) # SS - do.call allows dynamic execution of another function
significantheatResult <- subset(chiResultsDF, p_value < 0.05)
heatmapData <- acast( #SS - acast to convert to matrix for heatmap
significantheatResult,
variable1 ~ variable2,
value.var =  "statistic",
fill = NA
)
ggplot(melt(heatmapData, na.rm = TRUE), aes(Var1, Var2, fill = value)) +
geom_tile() +
scale_fill_viridis_c(option = "plasma", name = "Chi-Square Stat") +
labs(title = "Heatmap of Iterative Chi-Square Stats",
x = "Variable 1",
y = "Variable 2") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) #SS - create heatmap
# Chunk 37
topResultsHeat <- significantheatResult[order(-significantheatResult$statistic), ][1:10, ]
print(topResultsHeat) #SS - Table to show only top 10 results based on statistic and p value less than 0.05
topResultsHeat %>%
kable(format = "html") %>%
kable_styling()
pairsVars <- brfss_subset[, c("age80", "numadult", "state", "menthlth", "checkup1")]
ggpairs(pairsVars) +
ggtitle("Pairs Plot of Variables")
ggplot(brfss_subset, aes(x = hlthpl1, y = ment14d)) +
geom_boxplot() +
labs(title = "Poor Mental Health Days by Insurance Status", x = "Insurance", y = "Mental Health Days") +
theme_minimal()
